#!/bin/sh -e

# Script to create header files and links to configure
# U-Boot for a specific board.
#
# Parameters:  Target  Architecture  CPU  Board [VENDOR] [SOC]
#
# (C) 2002-2006 DENX Software Engineering, Wolfgang Denk <wd@denx.de>
#

#
# @$(MKCONFIG) mini6410 arm s3c64xx mini6410 samsung s3c6410 NAND ram128
# 	$0				$1	$2	$3		$4			$5		$6	  $7	$8

APPEND=no		# Default: Create new config file
BOARD_NAME=""	# Name to print in make output

# $@ = mini6410 arm s3c64xx mini6410 samsung s3c6410 NAND ram128
# $# = 8
while [ $# -gt 0 ] ; do
	case "$1" in
	--) shift ; break ;;
	-a) shift ; APPEND=yes ;;
	-n) shift ; BOARD_NAME="${1%%_config}" ; shift ;;
	*)  break ;;
	esac
done

[ "${BOARD_NAME}" ] || BOARD_NAME="$1"
# BOARD_NAME=mini6410

# $# = 8
[ $# -lt 4 ] && exit 1
[ $# -gt 8 ] && exit 1

echo "Configuring for ${BOARD_NAME} board which boot from $7 $8..."
# Configuring for mini6410 board which boot from NAND ram128...

#
# Create link to architecture specific headers
#

# U-boot - Makefile
#BUILD_DIR := $(shell cd $(BUILD_DIR) && /bin/pwd)
#OBJTREE     := $(if $(BUILD_DIR),$(BUILD_DIR),$(CURDIR))
#SRCTREE     := $(CURDIR)

# $SRCTREE == $OBJTREE == $(CURDIR)
	
if [ "$SRCTREE" != "$OBJTREE" ] ; then
	mkdir -p ${OBJTREE}/include
	mkdir -p ${OBJTREE}/include2
	cd ${OBJTREE}/include2
	rm -f asm
	ln -s ${SRCTREE}/include/asm-$2 asm
	LNPREFIX="../../include2/asm/"
	cd ../include
	rm -rf asm-$2
	rm -f asm
	mkdir asm-$2
	ln -s asm-$2 asm
else
	cd ./include
	rm -f asm
	ln -s asm-$2 asm		# ln -s asm-arm
fi

rm -f asm-$2/arch			# rm -f asm-arm/arch

# $6 = s3c6410
if [ -z "$6" -o "$6" = "NULL" ] ; then
	ln -s ${LNPREFIX}arch-$3 asm-$2/arch
else
	ln -s ${LNPREFIX}arch-$6 asm-$2/arch	# ln -s arch-s3c6410 asm-arm/arch
fi

# $3 = s3c64xx
# create link for s3c24xx SoC
if [ "$3" = "s3c24xx" ] ; then
	rm -f regs.h
	ln -s $6.h regs.h
	rm -f asm-$2/arch
	ln -s arch-$3 asm-$2/arch
fi

# create link for s3c64xx SoC
if [ "$3" = "s3c64xx" ] ; then
	rm -f regs.h
	ln -s $6.h regs.h						# ln -s s3c6410.h regs.h
	rm -f asm-$2/arch						# rm -f asm-arm/arch
	ln -s arch-$3 asm-$2/arch				# ln -s arch-s3c64xx asm-arm/arch
fi

if [ "$2" = "arm" ] ; then
	rm -f asm-$2/proc
	ln -s ${LNPREFIX}proc-armv asm-$2/proc
fi

# create link for s3c64xx-mp SoC
if [ "$3" = "s3c64xx-mp" ] ; then
	rm -f regs.h
	ln -s $6.h regs.h
	rm -f asm-$2/arch
	ln -s arch-$3 asm-$2/arch
fi

#
# Create include file for Make
#
echo "ARCH   = $2" >  config.mk
echo "CPU    = $3" >> config.mk
echo "BOARD  = $4" >> config.mk

[ "$5" ] && [ "$5" != "NULL" ] && echo "VENDOR = $5" >> config.mk

[ "$6" ] && [ "$6" != "NULL" ] && echo "SOC    = $6" >> config.mk

#
# Create board specific header file
#
if [ "$APPEND" = "yes" ]	# Append to existing config file
then
	echo >> config.h
else
	> config.h		# Create new config file
fi
echo "/* Automatically generated - do not edit */" >>config.h
case $7 in
SD)
	echo "#define FRIENDLYARM_BOOT_MEDIA_SD"   >> config.h
	;;
NAND)
	echo "#define FRIENDLYARM_BOOT_MEDIA_NAND" >> config.h
	;;
*)
	;;
esac
case $8 in
ram128)
	echo "#define FRIENDLYARM_BOOT_RAM128" >> config.h
	;;
ram256)
	echo "#define FRIENDLYARM_BOOT_RAM256" >> config.h
	;;
*)
	;;
esac
echo "#include <configs/$1.h>" >>config.h

exit 0
